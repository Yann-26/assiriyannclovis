# Generated by Django 5.2.6 on 2025-09-10 09:20

import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#6366f1', help_text='Hex color code', max_length=7)),
                ('icon', models.CharField(blank=True, help_text='FontAwesome icon class', max_length=50)),
                ('status', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=30, unique=True)),
                ('color', models.CharField(default='#10b981', help_text='Hex color code', max_length=7)),
                ('status', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('short_description', models.TextField(max_length=300)),
                ('description', tinymce.models.HTMLField()),
                ('project_type', models.CharField(choices=[('web', 'Web Application'), ('mobile', 'Mobile App'), ('desktop', 'Desktop Application'), ('api', 'API/Backend'), ('library', 'Library/Package'), ('other', 'Other')], default='web', max_length=20)),
                ('project_status', models.CharField(choices=[('planning', 'Planning'), ('development', 'In Development'), ('testing', 'Testing'), ('completed', 'Completed'), ('maintenance', 'Maintenance'), ('archived', 'Archived')], default='completed', max_length=20)),
                ('featured_image', models.ImageField(help_text='Main project image', upload_to='projects/featured/')),
                ('demo_url', models.URLField(blank=True, help_text='Live demo URL')),
                ('github_url', models.URLField(blank=True, help_text='GitHub repository URL')),
                ('documentation_url', models.URLField(blank=True, help_text='Documentation URL')),
                ('download_url', models.URLField(blank=True, help_text='Download URL')),
                ('technologies', models.TextField(help_text='Comma-separated list of technologies used')),
                ('features', models.TextField(help_text='Key features of the project')),
                ('challenges', models.TextField(blank=True, help_text='Challenges faced during development')),
                ('lessons_learned', models.TextField(blank=True, help_text='Lessons learned from this project')),
                ('duration_weeks', models.PositiveIntegerField(blank=True, help_text='Project duration in weeks', null=True)),
                ('team_size', models.PositiveIntegerField(default=1, help_text='Number of team members')),
                ('client', models.CharField(blank=True, help_text='Client or company name', max_length=100)),
                ('meta_description', models.TextField(blank=True, help_text='SEO meta description', max_length=160)),
                ('meta_keywords', models.TextField(blank=True, help_text='SEO keywords')),
                ('views', models.PositiveIntegerField(default=0)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_open_source', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogg.category')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-published_date', '-date_add'],
            },
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='projects/gallery/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('alt_text', models.CharField(blank=True, max_length=200)),
                ('order', models.PositiveIntegerField(default=0)),
                ('status', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='blogg.project')),
            ],
            options={
                'verbose_name': 'Project Image',
                'verbose_name_plural': 'Project Images',
                'ordering': ['order', 'date_add'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='gallery',
            field=models.ManyToManyField(blank=True, related_name='project_gallery', to='blogg.projectimage'),
        ),
        migrations.AddField(
            model_name='project',
            name='tags',
            field=models.ManyToManyField(blank=True, to='blogg.tag'),
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('short_description', models.TextField(max_length=300)),
                ('description', tinymce.models.HTMLField()),
                ('blog_type', models.CharField(choices=[('article', 'Article'), ('tutorial', 'Tutorial'), ('news', 'News'), ('review', 'Review'), ('personal', 'Personal'), ('technical', 'Technical')], default='article', max_length=20)),
                ('featured_image', models.ImageField(upload_to='blog/featured/')),
                ('reading_time', models.PositiveIntegerField(default=5, help_text='Estimated reading time in minutes')),
                ('excerpt', models.TextField(blank=True, help_text='Short excerpt for preview', max_length=500)),
                ('meta_description', models.TextField(blank=True, help_text='SEO meta description', max_length=160)),
                ('meta_keywords', models.TextField(blank=True, help_text='SEO keywords')),
                ('views', models.PositiveIntegerField(default=0)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('allow_comments', models.BooleanField(default=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogg.category')),
                ('tags', models.ManyToManyField(blank=True, to='blogg.tag')),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'ordering': ['-published_date', '-date_add'],
            },
        ),
        migrations.CreateModel(
            name='ProjectView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('referrer', models.URLField(blank=True)),
                ('session_key', models.CharField(blank=True, max_length=40)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogg.project')),
            ],
            options={
                'verbose_name': 'Project View',
                'verbose_name_plural': 'Project Views',
                'unique_together': {('project', 'ip_address', 'session_key')},
            },
        ),
    ]
